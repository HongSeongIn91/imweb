대량의 공격성 접속은 악의적으로 웹서버, DB의 리소스를 고갈시켜 새로운 트래픽을 생성할 수 없게 하거나 매우 느린 속도로 처리되어 사실상 서비스를 중단되게 만듭니다. 대량의 접속이 감지됐을 경우 nginx, php-fpm 으로 연동된 웹서버의 status, access_log 를 확인하여 연결된 커넥션과 요청, 비정상적인 요청을 시도하는 ip를 확인하여야 합니다. 특정 ip를 차단하는 처리는 대량의 접속 시도를 공격성으로 판단했을 때만 사용하길 권장합니다. nginx의 status는 linux 상에서 status nginx 명령어를 통해 확인하거나, url을 사용해 별도의 nginx 상태 정보를 확인할 수 있게 설정했다면 해당 url을 사용해 확인할 수도 있습니다. request 와 connection 값과 access_log 를 확인하여 대량의 공격성 접속이 발생하는 url에 대해 시간당 request 의 비율을 제한하거나 ip당 connection의 수를 제한할 수 있습니다. ip를 특정할 수 있다면 특정 ip에 대해 deny 지시문을 사용해 요청을 거부할 수 있습니다. 
웹서버는 백엔드 서버측으로 연결되기에 mysql 의 status와 processlist 를 확인해야 합니다. 다만 mysql의 status를 확인하여 max_connection 등의 설정을 변경하더라도 shutdown 후 재기동을 해야 변경된 설정이 반영되기에 웹서버 단의 대응보다 제약이 크다고 생각됩니다. processlist 를 확인하여 slow-query나 explain 결과 cost 값이 큰 쿼리를 kill 하여 부하를 감소시킬 수는 있습니다. 
업무 중 apache, tomcat으로 구성된 웹서버를 운영할 때 생성된 httpd 프로세스의 개수가 사내에서 설정한 한계치를 넘어갈 경우 restart 를 했었습니다. mysql의 로드 에버리지는 실시간으로 감지되고 있었고 설정한 한계치에 도달할 경우 알람이 발송되며, 개발팀에서 processlist 를 모니터링하여 조치를 취했었습니다.